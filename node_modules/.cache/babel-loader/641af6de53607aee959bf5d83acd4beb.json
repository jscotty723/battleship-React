{"ast":null,"code":"import _classCallCheck from \"/Users/learn/Desktop/battleship/battleship/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/learn/Desktop/battleship/battleship/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/learn/Desktop/battleship/battleship/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/learn/Desktop/battleship/battleship/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/learn/Desktop/battleship/battleship/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/learn/Desktop/battleship/battleship/src/Board.js\";\nimport React, { Component } from 'react';\nimport './Board.css';\n\nvar Board =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Board, _Component);\n\n  function Board(props) {\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this, props));\n\n    _this.playerClick = function (i) {\n      var _this$state = _this.state,\n          torpedoCount = _this$state.torpedoCount,\n          hitCount = _this$state.hitCount;\n\n      if (torpedoCount <= 0) {\n        console.log(\"You're out of torpedos!\");\n      } else {\n        if (_this.state.ships.includes(i)) {\n          var hit = _this.state.gameBoard;\n          hit[i] = \"x\";\n\n          _this.setState({\n            gameBoard: hit,\n            torpedoCount: torpedoCount - 1,\n            hitCount: hitCount + 1\n          });\n        } else {\n          var miss = _this.state.gameBoard;\n          miss[i] = \"o\";\n\n          _this.setState({\n            gameBoard: miss,\n            torpedoCount: torpedoCount - 1\n          });\n        }\n      }\n    };\n\n    _this.displayColor = function (i) {\n      if (_this.state.gameBoard[i] === 'x') {\n        return _this.state.boxColor[1];\n      } else if (_this.state.gameBoard[i] === 'o') {\n        return _this.state.boxColor[2];\n      } else {\n        return _this.state.boxColor[0];\n      }\n    };\n\n    _this.state = {\n      gameBoard: Array(100).fill(null),\n      boxColor: ['blue', 'red', 'green'],\n      ships: [0, 1, 2, 3, 22],\n      torpedoCount: 10,\n      hitCount: 0\n    };\n    return _this;\n  }\n\n  _createClass(Board, [{\n    key: \"render\",\n    // renderBoard = (i) => {\n    //             if(this.state.gameBoard[i] == 'x') {\n    //                 return\n    //         <div onClick={() => this.playerClick(i)} style={{backgroundColor: this.state.boxColor[1]}} className=\"box i\" id={i}>{i}</div>\n    //         } else {\n    //             return\n    //         <div onClick={() => this.playerClick(i)} style={{backgroundColor: this.state.boxColor[0]}} className=\"box i\" id={i}>{i}</div>\n    //         }\n    // }\n    // {this.state.gameBoard.map((el,i) => (\n    //     if (this.state.gameBoard[i] == 'x') {\n    //         <div onClick={() => this.playerClick(i)} style={{backgroundColor: this.state.boxColor[1]}} className=\"box i\" id={i}>\n    //         {i}\n    //         </div>\n    //     } else {\n    //         <div onClick={() => this.playerClick(i)} style={{backgroundColor: this.state.boxColor[0]}} className=\"box i\" id={i}>\n    //         {i}\n    //         </div>\n    //     ))}\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state);\n      return React.createElement(\"div\", {\n        className: \"boardContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, this.state.gameBoard.map(function (el, i) {\n        return React.createElement(\"div\", {\n          onClick: function onClick() {\n            return _this2.playerClick(i);\n          },\n          style: {\n            backgroundColor: _this2.displayColor(i)\n          },\n          className: \"box i\",\n          id: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, i);\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, this.state.torpedoCount));\n    }\n  }]);\n\n  return Board;\n}(Component);\n\nexport default Board;","map":{"version":3,"sources":["/Users/learn/Desktop/battleship/battleship/src/Board.js"],"names":["React","Component","Board","props","playerClick","i","state","torpedoCount","hitCount","console","log","ships","includes","hit","gameBoard","setState","miss","displayColor","boxColor","Array","fill","map","el","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport './Board.css';\n\nclass Board extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            gameBoard: Array(100).fill(null),\n            boxColor: ['blue', 'red', 'green'],\n            ships: [0, 1, 2, 3, 22],\n            torpedoCount: 10,\n            hitCount: 0\n        }\n    }\n\n    playerClick = (i) => {\n        let {torpedoCount, hitCount} = this.state\n        if (torpedoCount <= 0) {\n            console.log(\"You're out of torpedos!\")\n        } else {\n            if (this.state.ships.includes(i)) {\n                let hit = this.state.gameBoard\n                hit[i] = \"x\"\n                this.setState({\n                    gameBoard: hit,\n                    torpedoCount: torpedoCount -1,\n                    hitCount: hitCount +1\n                })\n            } else {\n                let miss = this.state.gameBoard\n                miss[i] = \"o\"\n                this.setState({\n                    gameBoard: miss,\n                    torpedoCount: torpedoCount -1\n                })\n            }\n        }\n    }\n\n    displayColor = (i) => {\n        if (this.state.gameBoard[i]==='x') {\n            return this.state.boxColor[1]\n        } else if (this.state.gameBoard[i]==='o') {\n                return this.state.boxColor[2]\n        } else {\n            return this.state.boxColor[0]\n        }\n    }\n\n// renderBoard = (i) => {\n//             if(this.state.gameBoard[i] == 'x') {\n//                 return\n//         <div onClick={() => this.playerClick(i)} style={{backgroundColor: this.state.boxColor[1]}} className=\"box i\" id={i}>{i}</div>\n//         } else {\n//             return\n//         <div onClick={() => this.playerClick(i)} style={{backgroundColor: this.state.boxColor[0]}} className=\"box i\" id={i}>{i}</div>\n//         }\n// }\n\n\n// {this.state.gameBoard.map((el,i) => (\n//     if (this.state.gameBoard[i] == 'x') {\n//         <div onClick={() => this.playerClick(i)} style={{backgroundColor: this.state.boxColor[1]}} className=\"box i\" id={i}>\n//         {i}\n//         </div>\n//     } else {\n//         <div onClick={() => this.playerClick(i)} style={{backgroundColor: this.state.boxColor[0]}} className=\"box i\" id={i}>\n//         {i}\n//         </div>\n//     ))}\n\n  render() {\n      console.log(this.state)\n    return (\n        <div className=\"boardContainer\">\n            <div className=\"board\">\n            {this.state.gameBoard.map((el, i) => (\n                    <div onClick={() => this.playerClick(i)} style={{backgroundColor: this.displayColor(i)}} className=\"box i\" id={i}>\n                    {i}\n                    </div>\n            ))}\n            </div>\n            <p>{this.state.torpedoCount}</p>\n        </div>\n    );\n  }\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}