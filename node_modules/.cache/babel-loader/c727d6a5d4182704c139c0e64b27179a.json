{"ast":null,"code":"import _classCallCheck from \"/Users/juliannepeters/Library/Mobile Documents/com~apple~CloudDocs/Bootcamp/PortfolioSite/Projects/battleship/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/juliannepeters/Library/Mobile Documents/com~apple~CloudDocs/Bootcamp/PortfolioSite/Projects/battleship/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/juliannepeters/Library/Mobile Documents/com~apple~CloudDocs/Bootcamp/PortfolioSite/Projects/battleship/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/juliannepeters/Library/Mobile Documents/com~apple~CloudDocs/Bootcamp/PortfolioSite/Projects/battleship/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/juliannepeters/Library/Mobile Documents/com~apple~CloudDocs/Bootcamp/PortfolioSite/Projects/battleship/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/juliannepeters/Library/Mobile Documents/com~apple~CloudDocs/Bootcamp/PortfolioSite/Projects/battleship/src/Board.js\";\nimport React, { Component } from 'react';\nimport './Board.css';\n\nvar Board =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Board, _Component);\n\n  function Board(props) {\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this, props));\n\n    _this.createBoard = function () {\n      var emptyArr = [];\n\n      for (var i = 5; i > 0; i--) {\n        emptyArr[i] = _this.shipYard(i);\n      }\n\n      var newArr = emptyArr.flat([1]);\n\n      for (var _i = 0; _i < newArr.length; _i++) {\n        for (var k = _i + 1; k < newArr.length; k++) {\n          if (newArr[_i] === newArr[k]) {\n            console.log(newArr[_i], newArr[k]);\n            return _this.createBoard();\n          }\n        }\n      }\n\n      \"url(\" + Background + \")\";\n\n      _this.setState({\n        ships: newArr,\n        gameBoard: Array(100).fill(null),\n        boxColor: [\"url(\".concat(shipwheel.jpg, \")\"), 'shipwheel.jpg', 'miss.jpg', 'swords.jpg'],\n        torpedoCount: 75,\n        hitCount: 0,\n        statusMessage: ''\n      });\n    };\n\n    _this.playerClick = function (i) {\n      var _this$state = _this.state,\n          ships = _this$state.ships,\n          gameBoard = _this$state.gameBoard,\n          torpedoCount = _this$state.torpedoCount,\n          hitCount = _this$state.hitCount;\n\n      if (gameBoard[i] == null && hitCount < ships.length) {\n        if (torpedoCount <= 0) {\n          _this.statusMessage(\"You're out of torpedos!\");\n\n          _this.displayMissed(ships);\n        } else {\n          if (ships.includes(i)) {\n            var hit = gameBoard;\n            hit[i] = \"x\";\n\n            _this.setState({\n              gameBoard: hit,\n              torpedoCount: torpedoCount - 1,\n              hitCount: hitCount + 1\n            });\n          } else {\n            var miss = gameBoard;\n            miss[i] = \"o\";\n\n            _this.setState({\n              gameBoard: miss,\n              torpedoCount: torpedoCount - 1\n            });\n          }\n        }\n\n        console.log(hitCount);\n\n        _this.checkWinner();\n      }\n    };\n\n    _this.checkWinner = function () {\n      if (_this.state.hitCount == _this.state.ships.length - 1) {\n        _this.statusMessage('You\\'ve won!');\n      }\n    };\n\n    _this.displayMissed = function (ships) {\n      var message = \"You did not use your torpedos wisely, young padawan\";\n\n      for (var i = 0; i < ships.length; i++) {\n        if (_this.state.gameBoard[ships[i]] === null) {\n          var missed = _this.state.gameBoard;\n          missed[ships[i]] = \"m\";\n\n          _this.setState({\n            gameBoard: missed,\n            statusMessage: message\n          });\n        }\n      }\n\n      return message;\n    };\n\n    _this.statusMessage = function (message) {\n      _this.setState({\n        statusMessage: message\n      });\n    };\n\n    _this.displayColor = function (i) {\n      if (_this.state.gameBoard[i] === 'x') {\n        return _this.state.boxColor[1];\n      } else if (_this.state.gameBoard[i] === 'o') {\n        return _this.state.boxColor[2];\n      } else if (_this.state.gameBoard[i] === 'm') {\n        return _this.state.boxColor[3];\n      } else {\n        return _this.state.boxColor[0];\n      }\n    };\n\n    _this.state = {\n      gameBoard: Array(100).fill(null),\n      boxColor: [\"url(shipwheel.jpg)\", 'shipwheel.jpg', 'miss.jpg', 'swords.jpg'],\n      ships: [],\n      torpedoCount: 75,\n      hitCount: 0,\n      statusMessage: ''\n    };\n    return _this;\n  }\n\n  _createClass(Board, [{\n    key: \"shipYard\",\n    value: function shipYard(num) {\n      var x = Math.floor(Math.random() * 10);\n      var y = Math.floor(Math.random() * (11 - num));\n      var tempShip = [];\n\n      if (Math.floor(Math.random() * 2) % 2 == 0) {\n        // vertical\n        for (var i = 0; i < num; i++) {\n          tempShip.push(parseInt('' + (y + i) + x));\n        }\n      } else {\n        // horizontal\n        for (var _i2 = 0; _i2 < num; _i2++) {\n          tempShip.push(parseInt('' + x + (y + _i2)));\n        }\n      }\n\n      return tempShip;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"boardContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, this.state.gameBoard.map(function (el, i) {\n        return React.createElement(\"div\", {\n          onClick: function onClick() {\n            return _this2.playerClick(i);\n          },\n          style: {\n            backgroundImage: _this2.displayColor(i)\n          },\n          className: \"box i\",\n          id: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, i);\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, this.state.torpedoCount, \" Status: \", this.state.torpedoCount === 0 ? this.displayMissed(this.state.ships) : this.state.statusMessage), React.createElement(\"button\", {\n        onClick: this.createBoard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Start Generate Ships\"));\n    }\n  }]);\n\n  return Board;\n}(Component);\n\nexport default Board;","map":{"version":3,"sources":["/Users/juliannepeters/Library/Mobile Documents/com~apple~CloudDocs/Bootcamp/PortfolioSite/Projects/battleship/src/Board.js"],"names":["React","Component","Board","props","createBoard","emptyArr","i","shipYard","newArr","flat","length","k","console","log","Background","setState","ships","gameBoard","Array","fill","boxColor","shipwheel","jpg","torpedoCount","hitCount","statusMessage","playerClick","state","displayMissed","includes","hit","miss","checkWinner","message","missed","displayColor","num","x","Math","floor","random","y","tempShip","push","parseInt","map","el","backgroundImage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport './Board.css';\n\nclass Board extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            gameBoard: Array(100).fill(null),\n            boxColor: [`url(shipwheel.jpg)`, 'shipwheel.jpg', 'miss.jpg', 'swords.jpg'],\n            ships: [],\n            torpedoCount: 75,\n            hitCount: 0,\n            statusMessage: ''\n        }\n    }\n\n    createBoard = () => {\n        let emptyArr = []\n        for (let i = 5; i > 0; i--) {\n            emptyArr[i] = this.shipYard(i)\n        }\n        let newArr = emptyArr.flat([1])\n\n        for (let i = 0; i < newArr.length; i++) {\n            for (let k = i+1; k < newArr.length; k++)\n            if (newArr[i] === newArr[k]) {\n                console.log(newArr[i],newArr[k]);\n                return this.createBoard()\n            }\n        }\n\n        \"url(\" + Background + \")\"\n\n        this.setState({\n            ships: newArr,\n            gameBoard: Array(100).fill(null),\n            boxColor: [`url(${shipwheel.jpg})`, 'shipwheel.jpg', 'miss.jpg', 'swords.jpg'],\n            torpedoCount: 75,\n            hitCount: 0,\n            statusMessage: ''\n        })\n    }\n\n    shipYard (num) {\n        let x = Math.floor(Math.random()* 10)\n        let y = Math.floor(Math.random()* (11-num))\n        let tempShip = []\n\n        if ((Math.floor(Math.random()*2) % 2) == 0) {\n            // vertical\n            for (let i = 0; i < num; i++) {\n                tempShip.push(parseInt('' + (y+i) + x))\n            }\n\n        } else {\n            // horizontal\n            for (let i = 0; i < num; i++) {\n                tempShip.push(parseInt('' + x + (y+i)))\n            }\n        }\n        return tempShip\n    }\n\n    playerClick = (i) => {\n        let {ships, gameBoard, torpedoCount, hitCount} = this.state\n        if (gameBoard[i] == null && hitCount < ships.length) {\n            if (torpedoCount <= 0) {\n                this.statusMessage(\"You're out of torpedos!\")\n                this.displayMissed(ships)\n\n            } else {\n                if (ships.includes(i)) {\n                    let hit = gameBoard\n                    hit[i] = \"x\"\n                    this.setState({\n                        gameBoard: hit,\n                        torpedoCount: torpedoCount -1,\n                        hitCount: hitCount +1\n                    })\n                } else {\n                    let miss = gameBoard\n                    miss[i] = \"o\"\n                    this.setState({\n                        gameBoard: miss,\n                        torpedoCount: torpedoCount -1\n                    })\n                }\n            }\n            console.log(hitCount);\n            this.checkWinner()\n        }\n    }\n\n    checkWinner =()=> {\n        if(this.state.hitCount == this.state.ships.length-1) {\n            this.statusMessage('You\\'ve won!')\n        }\n    }\n\n    displayMissed = (ships) => {\n        let message = \"You did not use your torpedos wisely, young padawan\"\n        for (let i = 0; i < ships.length; i++) {\n            if (this.state.gameBoard[ships[i]] === null) {\n                let missed = this.state.gameBoard\n                missed[ships[i]] = \"m\"\n                this.setState({\n                    gameBoard: missed,\n                    statusMessage: message\n                })\n            }\n        }return message\n    }\n\n    statusMessage = (message) => {\n        this.setState({statusMessage: message})\n    }\n\n    displayColor = (i) => {\n        if (this.state.gameBoard[i]==='x') {\n            return this.state.boxColor[1]\n        } else if (this.state.gameBoard[i]==='o') {\n            return this.state.boxColor[2]\n        } else if (this.state.gameBoard[i]==='m') {\n            return this.state.boxColor[3]\n        } else {\n            return this.state.boxColor[0]\n        }\n    }\n\n\n  render() {\n    return (\n        <div className=\"boardContainer\">\n            <div className=\"board\">\n            {this.state.gameBoard.map((el, i) => (\n                    <div onClick={() => this.playerClick(i)} style={{backgroundImage: this.displayColor(i)}} className=\"box i\" id={i}>\n                    {i}\n                    </div>\n            ))}\n            </div>\n            <p>{this.state.torpedoCount} Status: {(this.state.torpedoCount === 0) ? this.displayMissed(this.state.ships) : this.state.statusMessage}</p>\n            <button onClick={this.createBoard}>Start Generate Ships</button>\n        </div>\n    );\n  }\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}